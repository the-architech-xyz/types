import { ConfigSchema } from '../../../../types/plugin.js';
export interface MongoDBConfig {
    databaseUrl: string;
    databaseName: string;
    enableReplicaSet: boolean;
    enableSharding: boolean;
    enableAtlas: boolean;
    enableCompression: boolean;
    enableRetryWrites: boolean;
    enableReadConcern: boolean;
    enableWriteConcern: boolean;
    connectionPoolSize: number;
    serverSelectionTimeout: number;
    socketTimeout: number;
    maxIdleTime: number;
    enableMonitoring: boolean;
    enableLogging: boolean;
    enableMetrics: boolean;
    enableTelemetry: boolean;
    readPreference: 'primary' | 'primaryPreferred' | 'secondary' | 'secondaryPreferred' | 'nearest';
    writeConcern: 'majority' | '1' | '2' | '3';
    readConcern: 'local' | 'majority' | 'linearizable' | 'snapshot';
    maxPoolSize: number;
    minPoolSize: number;
    maxIdleTimeMS: number;
    connectTimeoutMS: number;
    socketTimeoutMS: number;
    serverSelectionTimeoutMS: number;
    heartbeatFrequencyMS: number;
    retryWrites: boolean;
    retryReads: boolean;
    wtimeout: number;
    journal: boolean;
    fsync: boolean;
    safe: boolean;
    w: number | string;
    j: boolean;
    wtimeoutMS: number;
    readPreferenceTags: string[];
    maxStalenessSeconds: number;
    compressors: string[];
    zlibCompressionLevel: number;
    ssl: boolean;
    sslValidate: boolean;
    sslCA: string;
    sslCert: string;
    sslKey: string;
    sslPass: string;
    sslCRL: string;
    tls: boolean;
    tlsInsecure: boolean;
    tlsAllowInvalidCertificates: boolean;
    tlsAllowInvalidHostnames: boolean;
    tlsCAFile: string;
    tlsCertificateFile: string;
    tlsCertificateKeyFile: string;
    tlsCertificateKeyFilePassword: string;
    tlsCRLFile: string;
    authSource: string;
    authMechanism: string;
    authMechanismProperties: Record<string, any>;
    gssapiServiceName: string;
    gssapiHostName: string;
    gssapiRealm: string;
    gssapiCanonicalizeHostName: boolean;
    localThresholdMS: number;
    directConnection: boolean;
    appName: string;
    replicaSet: string;
    maxConnecting: number;
    loadBalanced: boolean;
    serverApi: {
        version: string;
        strict: boolean;
        deprecationErrors: boolean;
    };
}
export declare const MongoDBConfigSchema: ConfigSchema;
export declare const MongoDBDefaultConfig: MongoDBConfig;
